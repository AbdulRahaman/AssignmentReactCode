// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Usercomponent should it renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserComponent
    user={
      Object {
        "email": "test@mail.COM",
        "username": "Test User",
        "uuid": "sample",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        draggable="true"
        onDragStart={[Function]}
      >
        <React.Fragment>
          <div>
            <div>
              <p
                className="username"
              >
                <strong />
              </p>
              <p>
                Email: 
                test@mail.COM
              </p>
            </div>
          </div>
        </React.Fragment>
      </div>,
      "id": "sample",
      "style": Object {
        "borderBottom": "solid 2px #e7e7e7",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          <div>
            <div>
              <p
                className="username"
              >
                <strong />
              </p>
              <p>
                Email: 
                test@mail.COM
              </p>
            </div>
          </div>
        </React.Fragment>,
        "draggable": "true",
        "onDragStart": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div>
            <div>
              <p
                className="username"
              >
                <strong />
              </p>
              <p>
                Email: 
                test@mail.COM
              </p>
            </div>
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div>
              <p
                className="username"
              >
                <strong />
              </p>
              <p>
                Email: 
                test@mail.COM
              </p>
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="username"
                >
                  <strong />
                </p>,
                <p>
                  Email: 
                  test@mail.COM
                </p>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <strong />,
                  "className": "username",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "strong",
                },
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Email: ",
                    "test@mail.COM",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Email: ",
                  "test@mail.COM",
                ],
                "type": "p",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": Symbol(react.fragment),
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          draggable="true"
          onDragStart={[Function]}
        >
          <React.Fragment>
            <div>
              <div>
                <p
                  className="username"
                >
                  <strong />
                </p>
                <p>
                  Email: 
                  test@mail.COM
                </p>
              </div>
            </div>
          </React.Fragment>
        </div>,
        "id": "sample",
        "style": Object {
          "borderBottom": "solid 2px #e7e7e7",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <React.Fragment>
            <div>
              <div>
                <p
                  className="username"
                >
                  <strong />
                </p>
                <p>
                  Email: 
                  test@mail.COM
                </p>
              </div>
            </div>
          </React.Fragment>,
          "draggable": "true",
          "onDragStart": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div>
              <div>
                <p
                  className="username"
                >
                  <strong />
                </p>
                <p>
                  Email: 
                  test@mail.COM
                </p>
              </div>
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div>
                <p
                  className="username"
                >
                  <strong />
                </p>
                <p>
                  Email: 
                  test@mail.COM
                </p>
              </div>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="username"
                  >
                    <strong />
                  </p>,
                  <p>
                    Email: 
                    test@mail.COM
                  </p>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <strong />,
                    "className": "username",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "strong",
                  },
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Email: ",
                      "test@mail.COM",
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Email: ",
                    "test@mail.COM",
                  ],
                  "type": "p",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": Symbol(react.fragment),
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
